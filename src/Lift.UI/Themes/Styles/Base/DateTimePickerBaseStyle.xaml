<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:interactivity="clr-namespace:Lift.UI.Interactivity"
                    xmlns:converter="clr-namespace:Lift.UI.Tools.Converter"
                    xmlns:o="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
                    xmlns:system="clr-namespace:System;assembly=mscorlib"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:langs="clr-namespace:Lift.UI.Properties.Langs" xmlns:liftui="clr-namespace:Lift.UI.Controls"
                    xmlns:tools="clr-namespace:Lift.UI.Tools" xmlns:ex="clr-namespace:Lift.UI.Tools.Extension"
                    xmlns:conv="clr-namespace:Lift.UI.Tools.Converter"
                    xmlns:lang="clr-namespace:Lift.UI.Properties.Langs" xmlns:local="clr-namespace:Lift.UI.Controls"
                    xmlns:primitives="clr-namespace:Microsoft.Windows.Controls.Primitives"
                    xmlns:shapes="clr-namespace:Lift.UI.Expression.Shapes">

    <Style x:Key="DateTimePickerBaseStyle" BasedOn="{StaticResource InputElementBaseStyle}"
           TargetType="liftui:DateTimePicker">
        <Setter Property="CaretBrush" Value="{DynamicResource PrimaryTextBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="liftui:DateTimePicker">
                    <Grid x:Name="PART_Root">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Border x:Name="border" Grid.ColumnSpan="2"
                                CornerRadius="{Binding Path=(liftui:BorderElement.CornerRadius),RelativeSource={RelativeSource TemplatedParent}}"
                                BorderBrush="{DynamicResource BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}" />
                        <Button Height="Auto" Width="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                liftui:IconElement.Width="14" Style="{StaticResource ButtonIcon}"
                                Padding="{Binding Padding, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ThicknessSplitConverter}, ConverterParameter='0,0,1,0'}"
                                liftui:IconElement.Geometry="{StaticResource ClockGeometry}" x:Name="PART_Button"
                                Grid.Column="1" Foreground="{Binding BorderBrush,ElementName=border}" Focusable="False"
                                Grid.Row="0" />
                        <liftui:WatermarkTextBox CaretBrush="{TemplateBinding CaretBrush}"
                                                 Foreground="{TemplateBinding Foreground}"
                                                 Padding="{TemplateBinding Padding}" x:Name="PART_TextBox"
                                                 HorizontalAlignment="Stretch" Grid.Column="0"
                                                 Focusable="{TemplateBinding Focusable}"
                                                 HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                 Grid.Row="0"
                                                 VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
                        <Popup Grid.Column="0" x:Name="PART_Popup"
                               PopupAnimation="{StaticResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                               AllowsTransparency="True" Placement="Bottom"
                               PlacementTarget="{Binding ElementName=border}" StaysOpen="False" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="PART_Root" Value="0.4" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true" />
                                <Condition Property="IsOpen" Value="false" SourceName="PART_Popup" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" TargetName="border"
                                    Value="{DynamicResource SecondaryBorderBrush}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true" />
                                <Condition Property="IsOpen" Value="true" SourceName="PART_Popup" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource PrimaryBrush}" />
                        </MultiTrigger>
                        <Trigger Property="IsFocused" Value="true" SourceName="PART_TextBox">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource PrimaryBrush}" />
                        </Trigger>
                        <Trigger Property="IsOpen" Value="True" SourceName="PART_Popup">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource PrimaryBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="DateTimePickerExtendTopTemplate" TargetType="liftui:DateTimePicker">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition
                    MinHeight="{Binding Path=(liftui:InfoElement.MinContentHeight),RelativeSource={RelativeSource TemplatedParent}}"
                    Height="{Binding Path=(liftui:InfoElement.ContentHeight),RelativeSource={RelativeSource TemplatedParent},Converter={StaticResource Double2GridLengthConverter}}" />
            </Grid.RowDefinitions>
            <DockPanel LastChildFill="True"
                       Visibility="{Binding Path=(liftui:InfoElement.Title),RelativeSource={RelativeSource TemplatedParent},Converter={StaticResource String2VisibilityConverter}}"
                       HorizontalAlignment="{Binding Path=(liftui:TitleElement.HorizontalAlignment),RelativeSource={RelativeSource TemplatedParent}}"
                       Margin="{Binding Path=(liftui:TitleElement.MarginOnTheTop),RelativeSource={RelativeSource TemplatedParent}}">
                <ContentPresenter DockPanel.Dock="Right" TextElement.Foreground="{DynamicResource DangerBrush}"
                                  Margin="4,0,0,0"
                                  Content="{Binding Path=(liftui:InfoElement.Symbol),RelativeSource={RelativeSource TemplatedParent}}"
                                  Visibility="{Binding Path=(liftui:InfoElement.Necessary),RelativeSource={RelativeSource TemplatedParent},Converter={StaticResource Boolean2VisibilityConverter}}" />
                <TextBlock liftui:TextBlockAttach.AutoTooltip="True" TextWrapping="NoWrap"
                           TextTrimming="CharacterEllipsis"
                           Text="{Binding Path=(liftui:InfoElement.Title),RelativeSource={RelativeSource TemplatedParent}}" />
            </DockPanel>
            <Grid x:Name="PART_Root" Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Border x:Name="border" Grid.ColumnSpan="2"
                        CornerRadius="{Binding Path=(liftui:BorderElement.CornerRadius),RelativeSource={RelativeSource TemplatedParent}}"
                        BorderBrush="{DynamicResource BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding Background}" />
                <Button Height="Auto" Width="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                        liftui:IconElement.Width="14" Style="{StaticResource ButtonIcon}"
                        Padding="{Binding Padding, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ThicknessSplitConverter}, ConverterParameter='0,0,1,0'}"
                        liftui:IconElement.Geometry="{StaticResource ClockGeometry}" x:Name="PART_Button"
                        Grid.Column="1" Foreground="{Binding BorderBrush,ElementName=border}" Focusable="False"
                        Grid.Row="0" />
                <liftui:WatermarkTextBox CaretBrush="{TemplateBinding CaretBrush}"
                                         Foreground="{TemplateBinding Foreground}" Padding="{TemplateBinding Padding}"
                                         Watermark="{Binding Path=(liftui:InfoElement.Placeholder),RelativeSource={RelativeSource TemplatedParent}}"
                                         x:Name="PART_TextBox" HorizontalAlignment="Stretch" Grid.Column="0"
                                         Focusable="{TemplateBinding Focusable}"
                                         HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                         Grid.Row="0"
                                         VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
                <Popup Grid.Column="0" x:Name="PART_Popup"
                       PopupAnimation="{StaticResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                       AllowsTransparency="True" Placement="Bottom" PlacementTarget="{Binding ElementName=border}"
                       StaysOpen="False" />
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" TargetName="PART_Root" Value="0.4" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="true" SourceName="PART_Root" />
                    <Condition Property="IsOpen" Value="false" SourceName="PART_Popup" />
                </MultiTrigger.Conditions>
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource SecondaryBorderBrush}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="true" SourceName="PART_Root" />
                    <Condition Property="IsOpen" Value="true" SourceName="PART_Popup" />
                </MultiTrigger.Conditions>
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource PrimaryBrush}" />
            </MultiTrigger>
            <Trigger Property="IsFocused" Value="true" SourceName="PART_TextBox">
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource PrimaryBrush}" />
            </Trigger>
            <Trigger Property="IsOpen" Value="True" SourceName="PART_Popup">
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource PrimaryBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="DateTimePickerExtendLeftTemplate" TargetType="liftui:DateTimePicker">
        <Grid
            MinHeight="{Binding Path=(liftui:InfoElement.MinContentHeight),RelativeSource={RelativeSource TemplatedParent}}"
            Height="{Binding Path=(liftui:InfoElement.ContentHeight),RelativeSource={RelativeSource TemplatedParent}}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition
                    Width="{Binding Path=(liftui:InfoElement.TitleWidth),RelativeSource={RelativeSource TemplatedParent}}" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <DockPanel LastChildFill="True"
                       Visibility="{Binding Path=(liftui:InfoElement.Title),RelativeSource={RelativeSource TemplatedParent},Converter={StaticResource String2VisibilityConverter}}"
                       HorizontalAlignment="{Binding Path=(liftui:TitleElement.HorizontalAlignment),RelativeSource={RelativeSource TemplatedParent}}"
                       VerticalAlignment="{Binding Path=(liftui:TitleElement.VerticalAlignment),RelativeSource={RelativeSource TemplatedParent}}"
                       Margin="{Binding Path=(liftui:TitleElement.MarginOnTheLeft),RelativeSource={RelativeSource TemplatedParent}}">
                <ContentPresenter DockPanel.Dock="Right" TextElement.Foreground="{DynamicResource DangerBrush}"
                                  Margin="4,0,0,0"
                                  Content="{Binding Path=(liftui:InfoElement.Symbol),RelativeSource={RelativeSource TemplatedParent}}"
                                  Visibility="{Binding Path=(liftui:InfoElement.Necessary),RelativeSource={RelativeSource TemplatedParent},Converter={StaticResource Boolean2VisibilityConverter}}" />
                <TextBlock liftui:TextBlockAttach.AutoTooltip="True" TextWrapping="NoWrap"
                           TextTrimming="CharacterEllipsis"
                           Text="{Binding Path=(liftui:InfoElement.Title),RelativeSource={RelativeSource TemplatedParent}}" />
            </DockPanel>
            <Grid x:Name="PART_Root" Grid.Column="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Border x:Name="border" Grid.ColumnSpan="2"
                        CornerRadius="{Binding Path=(liftui:BorderElement.CornerRadius),RelativeSource={RelativeSource TemplatedParent}}"
                        BorderBrush="{DynamicResource BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding Background}" />
                <Button Height="Auto" Width="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                        liftui:IconElement.Width="14" Style="{StaticResource ButtonIcon}"
                        Padding="{Binding Padding, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ThicknessSplitConverter}, ConverterParameter='0,0,1,0'}"
                        liftui:IconElement.Geometry="{StaticResource ClockGeometry}" x:Name="PART_Button"
                        Grid.Column="1" Foreground="{Binding BorderBrush,ElementName=border}" Focusable="False"
                        Grid.Row="0" />
                <liftui:WatermarkTextBox CaretBrush="{TemplateBinding CaretBrush}"
                                         Foreground="{TemplateBinding Foreground}" Padding="{TemplateBinding Padding}"
                                         Watermark="{Binding Path=(liftui:InfoElement.Placeholder),RelativeSource={RelativeSource TemplatedParent}}"
                                         x:Name="PART_TextBox" HorizontalAlignment="Stretch" Grid.Column="0"
                                         Focusable="{TemplateBinding Focusable}"
                                         HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                         Grid.Row="0"
                                         VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
                <Popup Grid.Column="0" x:Name="PART_Popup"
                       PopupAnimation="{StaticResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                       AllowsTransparency="True" Placement="Bottom" PlacementTarget="{Binding ElementName=border}"
                       StaysOpen="False" />
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" TargetName="PART_Root" Value="0.4" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="true" SourceName="PART_Root" />
                    <Condition Property="IsOpen" Value="false" SourceName="PART_Popup" />
                </MultiTrigger.Conditions>
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource SecondaryBorderBrush}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="true" SourceName="PART_Root" />
                    <Condition Property="IsOpen" Value="true" SourceName="PART_Popup" />
                </MultiTrigger.Conditions>
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource PrimaryBrush}" />
            </MultiTrigger>
            <Trigger Property="IsFocused" Value="true" SourceName="PART_TextBox">
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource PrimaryBrush}" />
            </Trigger>
            <Trigger Property="IsOpen" Value="True" SourceName="PART_Popup">
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource PrimaryBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="DateTimePickerExtendBaseStyle" BasedOn="{StaticResource DateTimePickerBaseStyle}"
           TargetType="liftui:DateTimePicker">
        <Setter Property="Height" Value="Auto" />
        <Setter Property="liftui:InfoElement.Symbol" Value="●" />
        <Setter Property="liftui:InfoElement.ContentHeight" Value="{x:Static system:Double.NaN}" />
        <Setter Property="liftui:InfoElement.MinContentHeight" Value="{StaticResource DefaultControlHeight}" />
        <Setter Property="Template" Value="{StaticResource DateTimePickerExtendTopTemplate}" />
        <Style.Triggers>
            <Trigger Property="liftui:InfoElement.TitlePlacement" Value="Left">
                <Setter Property="Template" Value="{StaticResource DateTimePickerExtendLeftTemplate}" />
                <Setter Property="Width" Value="Auto" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="DateTimePickerPlusTopTemplate" TargetType="liftui:DateTimePicker">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition
                    MinHeight="{Binding Path=(liftui:InfoElement.MinContentHeight),RelativeSource={RelativeSource TemplatedParent}}"
                    Height="{Binding Path=(liftui:InfoElement.ContentHeight),RelativeSource={RelativeSource TemplatedParent},Converter={StaticResource Double2GridLengthConverter}}" />
            </Grid.RowDefinitions>
            <DockPanel LastChildFill="True"
                       Visibility="{Binding Path=(liftui:InfoElement.Title),RelativeSource={RelativeSource TemplatedParent},Converter={StaticResource String2VisibilityConverter}}"
                       HorizontalAlignment="{Binding Path=(liftui:TitleElement.HorizontalAlignment),RelativeSource={RelativeSource TemplatedParent}}"
                       Margin="{Binding Path=(liftui:TitleElement.MarginOnTheTop),RelativeSource={RelativeSource TemplatedParent}}">
                <ContentPresenter DockPanel.Dock="Right" TextElement.Foreground="{DynamicResource DangerBrush}"
                                  Margin="4,0,0,0"
                                  Content="{Binding Path=(liftui:InfoElement.Symbol),RelativeSource={RelativeSource TemplatedParent}}"
                                  Visibility="{Binding Path=(liftui:InfoElement.Necessary),RelativeSource={RelativeSource TemplatedParent},Converter={StaticResource Boolean2VisibilityConverter}}" />
                <TextBlock liftui:TextBlockAttach.AutoTooltip="True" TextWrapping="NoWrap"
                           TextTrimming="CharacterEllipsis"
                           Text="{Binding Path=(liftui:InfoElement.Title),RelativeSource={RelativeSource TemplatedParent}}" />
            </DockPanel>
            <Grid x:Name="PART_Root" Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Border x:Name="border" Grid.ColumnSpan="3"
                        CornerRadius="{Binding Path=(liftui:BorderElement.CornerRadius),RelativeSource={RelativeSource TemplatedParent}}"
                        BorderBrush="{DynamicResource BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding Background}" />
                <Button Height="Auto" Width="Auto" HorizontalContentAlignment="Left" HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch" liftui:IconElement.Width="14"
                        Command="interactivity:ControlCommands.Clear" Visibility="Collapsed" Name="ButtonClear"
                        Grid.Column="1" Style="{StaticResource ButtonIcon}" Padding="0,0,2,0"
                        liftui:IconElement.Geometry="{StaticResource DeleteFillCircleGeometry}"
                        Foreground="{Binding BorderBrush,ElementName=border}" />
                <Button Height="Auto" Width="Auto" HorizontalContentAlignment="Left" HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch" liftui:IconElement.Width="14" Style="{StaticResource ButtonIcon}"
                        Padding="{Binding Padding, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ThicknessSplitConverter}, ConverterParameter='0,0,1,0'}"
                        liftui:IconElement.Geometry="{StaticResource ClockGeometry}" x:Name="PART_Button"
                        Grid.Column="2" Foreground="{Binding BorderBrush,ElementName=border}" Focusable="False"
                        Grid.Row="0" />
                <liftui:WatermarkTextBox x:Name="PART_TextBox" CaretBrush="{TemplateBinding CaretBrush}"
                                         Foreground="{TemplateBinding Foreground}" Padding="{TemplateBinding Padding}"
                                         Watermark="{Binding Path=(liftui:InfoElement.Placeholder),RelativeSource={RelativeSource TemplatedParent}}"
                                         HorizontalAlignment="Stretch" Grid.Column="0"
                                         Focusable="{TemplateBinding Focusable}"
                                         HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                         Grid.Row="0"
                                         VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
                <Popup Grid.Column="0" x:Name="PART_Popup"
                       PopupAnimation="{StaticResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                       AllowsTransparency="True" Placement="Bottom" PlacementTarget="{Binding ElementName=border}"
                       StaysOpen="False" />
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" TargetName="PART_Root" Value="0.4" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="true" SourceName="PART_Root" />
                    <Condition Property="IsOpen" Value="false" SourceName="PART_Popup" />
                </MultiTrigger.Conditions>
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource SecondaryBorderBrush}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="true" SourceName="PART_Root" />
                    <Condition Property="IsOpen" Value="true" SourceName="PART_Popup" />
                </MultiTrigger.Conditions>
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource PrimaryBrush}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="true" SourceName="PART_Root" />
                    <Condition Property="liftui:InfoElement.ShowClearButton" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Visibility" Value="Visible" TargetName="ButtonClear" />
            </MultiTrigger>
            <Trigger Property="IsFocused" Value="true" SourceName="PART_TextBox">
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource PrimaryBrush}" />
            </Trigger>
            <Trigger Property="IsOpen" Value="True" SourceName="PART_Popup">
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource PrimaryBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="DateTimePickerPlusLeftTemplate" TargetType="liftui:DateTimePicker">
        <Grid
            MinHeight="{Binding Path=(liftui:InfoElement.MinContentHeight),RelativeSource={RelativeSource TemplatedParent}}"
            Height="{Binding Path=(liftui:InfoElement.ContentHeight),RelativeSource={RelativeSource TemplatedParent}}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition
                    Width="{Binding Path=(liftui:InfoElement.TitleWidth),RelativeSource={RelativeSource TemplatedParent}}" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <DockPanel LastChildFill="True"
                       Visibility="{Binding Path=(liftui:InfoElement.Title),RelativeSource={RelativeSource TemplatedParent},Converter={StaticResource String2VisibilityConverter}}"
                       HorizontalAlignment="{Binding Path=(liftui:TitleElement.HorizontalAlignment),RelativeSource={RelativeSource TemplatedParent}}"
                       VerticalAlignment="{Binding Path=(liftui:TitleElement.VerticalAlignment),RelativeSource={RelativeSource TemplatedParent}}"
                       Margin="{Binding Path=(liftui:TitleElement.MarginOnTheLeft),RelativeSource={RelativeSource TemplatedParent}}">
                <ContentPresenter DockPanel.Dock="Right" TextElement.Foreground="{DynamicResource DangerBrush}"
                                  Margin="4,0,0,0"
                                  Content="{Binding Path=(liftui:InfoElement.Symbol),RelativeSource={RelativeSource TemplatedParent}}"
                                  Visibility="{Binding Path=(liftui:InfoElement.Necessary),RelativeSource={RelativeSource TemplatedParent},Converter={StaticResource Boolean2VisibilityConverter}}" />
                <TextBlock liftui:TextBlockAttach.AutoTooltip="True" TextWrapping="NoWrap"
                           TextTrimming="CharacterEllipsis"
                           Text="{Binding Path=(liftui:InfoElement.Title),RelativeSource={RelativeSource TemplatedParent}}" />
            </DockPanel>
            <Grid x:Name="PART_Root" Grid.Column="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Border x:Name="border" Grid.ColumnSpan="3"
                        CornerRadius="{Binding Path=(liftui:BorderElement.CornerRadius),RelativeSource={RelativeSource TemplatedParent}}"
                        BorderBrush="{DynamicResource BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding Background}" />
                <Button Height="Auto" Width="Auto" HorizontalContentAlignment="Left" HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch" liftui:IconElement.Width="14"
                        Command="interactivity:ControlCommands.Clear" Visibility="Collapsed" Name="ButtonClear"
                        Grid.Column="1" Style="{StaticResource ButtonIcon}" Padding="0,0,2,0"
                        liftui:IconElement.Geometry="{StaticResource DeleteFillCircleGeometry}"
                        Foreground="{Binding BorderBrush,ElementName=border}" />
                <Button Height="Auto" Width="Auto" HorizontalContentAlignment="Left" HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch" liftui:IconElement.Width="14" Style="{StaticResource ButtonIcon}"
                        Padding="{Binding Padding, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ThicknessSplitConverter}, ConverterParameter='0,0,1,0'}"
                        liftui:IconElement.Geometry="{StaticResource ClockGeometry}" x:Name="PART_Button"
                        Grid.Column="2" Foreground="{Binding BorderBrush,ElementName=border}" Focusable="False"
                        Grid.Row="0" />
                <liftui:WatermarkTextBox x:Name="PART_TextBox" CaretBrush="{TemplateBinding CaretBrush}"
                                         Foreground="{TemplateBinding Foreground}" Padding="{TemplateBinding Padding}"
                                         Watermark="{Binding Path=(liftui:InfoElement.Placeholder),RelativeSource={RelativeSource TemplatedParent}}"
                                         HorizontalAlignment="Stretch" Grid.Column="0"
                                         Focusable="{TemplateBinding Focusable}"
                                         HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                         Grid.Row="0"
                                         VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
                <Popup Grid.Column="0" x:Name="PART_Popup"
                       PopupAnimation="{StaticResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                       AllowsTransparency="True" Placement="Bottom" PlacementTarget="{Binding ElementName=border}"
                       StaysOpen="False" />
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" TargetName="PART_Root" Value="0.4" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="true" SourceName="PART_Root" />
                    <Condition Property="IsOpen" Value="false" SourceName="PART_Popup" />
                </MultiTrigger.Conditions>
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource SecondaryBorderBrush}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="true" SourceName="PART_Root" />
                    <Condition Property="IsOpen" Value="true" SourceName="PART_Popup" />
                </MultiTrigger.Conditions>
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource PrimaryBrush}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="true" SourceName="PART_Root" />
                    <Condition Property="liftui:InfoElement.ShowClearButton" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Visibility" Value="Visible" TargetName="ButtonClear" />
            </MultiTrigger>
            <Trigger Property="IsFocused" Value="true" SourceName="PART_TextBox">
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource PrimaryBrush}" />
            </Trigger>
            <Trigger Property="IsOpen" Value="True" SourceName="PART_Popup">
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource PrimaryBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="DateTimePickerPlusBaseStyle" BasedOn="{StaticResource DateTimePickerExtendBaseStyle}"
           TargetType="liftui:DateTimePicker">
        <Setter Property="Template" Value="{StaticResource DateTimePickerPlusTopTemplate}" />
        <Style.Triggers>
            <Trigger Property="liftui:InfoElement.TitlePlacement" Value="Left">
                <Setter Property="Template" Value="{StaticResource DateTimePickerPlusLeftTemplate}" />
                <Setter Property="Width" Value="Auto" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>
