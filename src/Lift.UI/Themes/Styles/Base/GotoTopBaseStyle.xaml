<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:interactivity="clr-namespace:Lift.UI.Interactivity"
                    xmlns:converter="clr-namespace:Lift.UI.Tools.Converter"
                    xmlns:o="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
                    xmlns:system="clr-namespace:System;assembly=mscorlib"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:langs="clr-namespace:Lift.UI.Properties.Langs" xmlns:liftui="clr-namespace:Lift.UI.Controls"
                    xmlns:tools="clr-namespace:Lift.UI.Tools" xmlns:ex="clr-namespace:Lift.UI.Tools.Extension"
                    xmlns:conv="clr-namespace:Lift.UI.Tools.Converter"
                    xmlns:lang="clr-namespace:Lift.UI.Properties.Langs" xmlns:local="clr-namespace:Lift.UI.Controls"
                    xmlns:primitives="clr-namespace:Microsoft.Windows.Controls.Primitives"
                    xmlns:shapes="clr-namespace:Lift.UI.Expression.Shapes">

    <Style x:Key="GotoTopBaseStyle" BasedOn="{StaticResource ButtonBaseStyle}" TargetType="liftui:GotoTop">
        <Setter Property="Width" Value="50" />
        <Setter Property="Height" Value="50" />
        <Setter Property="liftui:BorderElement.CornerRadius" Value="25" />
        <Setter Property="liftui:IconElement.Geometry" Value="{StaticResource UpGeometry}" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
        <Setter Property="Padding" Value="16" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Style="{StaticResource RectangleFocusVisualCircular}" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource SecondaryRegionBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource BorderBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>
