<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:interactivity="clr-namespace:Lift.UI.Interactivity"
                    xmlns:converter="clr-namespace:Lift.UI.Tools.Converter"
                    xmlns:o="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
                    xmlns:system="clr-namespace:System;assembly=mscorlib"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:langs="clr-namespace:Lift.UI.Properties.Langs" xmlns:liftui="clr-namespace:Lift.UI.Controls"
                    xmlns:tools="clr-namespace:Lift.UI.Tools" xmlns:ex="clr-namespace:Lift.UI.Tools.Extension"
                    xmlns:conv="clr-namespace:Lift.UI.Tools.Converter"
                    xmlns:lang="clr-namespace:Lift.UI.Properties.Langs" xmlns:local="clr-namespace:Lift.UI.Controls"
                    xmlns:primitives="clr-namespace:Microsoft.Windows.Controls.Primitives"
                    xmlns:shapes="clr-namespace:Lift.UI.Expression.Shapes">

    <Style
        x:Key="DateTimePickerBaseStylePersian"
        BasedOn="{StaticResource InputElementBaseStyle}"
        TargetType="liftui:PersianDateTimePicker">
        <Setter Property="CaretBrush" Value="{DynamicResource PrimaryTextBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="liftui:PersianDateTimePicker">
                    <Grid x:Name="PART_Root">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Border
                            x:Name="border"
                            Grid.ColumnSpan="2"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{DynamicResource BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{Binding Path=(liftui:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" />
                        <Button
                            x:Name="PART_Button"
                            Grid.Row="0"
                            Grid.Column="1"
                            Width="Auto"
                            Height="Auto"
                            Padding="{Binding Padding, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ThicknessSplitConverter}, ConverterParameter='0,0,1,0'}"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            liftui:IconElement.Geometry="{StaticResource ClockGeometry}"
                            liftui:IconElement.Width="14"
                            Focusable="False"
                            Foreground="{Binding BorderBrush, ElementName=border}"
                            Style="{StaticResource ButtonIcon}" />
                        <liftui:WatermarkTextBox
                            x:Name="PART_TextBox"
                            Grid.Row="0"
                            Grid.Column="0"
                            Padding="{TemplateBinding Padding}"
                            HorizontalAlignment="Stretch"
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                            CaretBrush="{TemplateBinding CaretBrush}"
                            Focusable="{TemplateBinding Focusable}"
                            Foreground="{TemplateBinding Foreground}" />
                        <Popup
                            x:Name="PART_Popup"
                            Grid.Column="0"
                            AllowsTransparency="True"
                            Placement="Bottom"
                            PlacementTarget="{Binding ElementName=border}"
                            PopupAnimation="{StaticResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                            StaysOpen="False" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="PART_Root" Property="Opacity" Value="0.4" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true" />
                                <Condition SourceName="PART_Popup" Property="IsOpen" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="border" Property="BorderBrush"
                                    Value="{DynamicResource SecondaryBorderBrush}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true" />
                                <Condition SourceName="PART_Popup" Property="IsOpen" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
                        </MultiTrigger>
                        <Trigger SourceName="PART_TextBox" Property="IsFocused" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
                        </Trigger>
                        <Trigger SourceName="PART_Popup" Property="IsOpen" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="DateTimePickerExtendTopTemplatePersian" TargetType="liftui:PersianDateTimePicker">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition
                    Height="{Binding Path=(liftui:InfoElement.ContentHeight), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource Double2GridLengthConverter}}"
                    MinHeight="{Binding Path=(liftui:InfoElement.MinContentHeight), RelativeSource={RelativeSource TemplatedParent}}" />
            </Grid.RowDefinitions>
            <DockPanel
                Margin="{Binding Path=(liftui:TitleElement.MarginOnTheTop), RelativeSource={RelativeSource TemplatedParent}}"
                HorizontalAlignment="{Binding Path=(liftui:TitleElement.HorizontalAlignment), RelativeSource={RelativeSource TemplatedParent}}"
                LastChildFill="True"
                Visibility="{Binding Path=(liftui:InfoElement.Title), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource String2VisibilityConverter}}">
                <ContentPresenter
                    Margin="4,0,0,0"
                    Content="{Binding Path=(liftui:InfoElement.Symbol), RelativeSource={RelativeSource TemplatedParent}}"
                    DockPanel.Dock="Right"
                    TextElement.Foreground="{DynamicResource DangerBrush}"
                    Visibility="{Binding Path=(liftui:InfoElement.Necessary), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource Boolean2VisibilityConverter}}" />
                <TextBlock
                    liftui:TextBlockAttach.AutoTooltip="True"
                    Text="{Binding Path=(liftui:InfoElement.Title), RelativeSource={RelativeSource TemplatedParent}}"
                    TextTrimming="CharacterEllipsis"
                    TextWrapping="NoWrap" />
            </DockPanel>
            <Grid x:Name="PART_Root" Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Border
                    x:Name="border"
                    Grid.ColumnSpan="2"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{DynamicResource BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="{Binding Path=(liftui:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" />
                <Button
                    x:Name="PART_Button"
                    Grid.Row="0"
                    Grid.Column="1"
                    Width="Auto"
                    Height="Auto"
                    Padding="{Binding Padding, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ThicknessSplitConverter}, ConverterParameter='0,0,1,0'}"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    liftui:IconElement.Geometry="{StaticResource ClockGeometry}"
                    liftui:IconElement.Width="14"
                    Focusable="False"
                    Foreground="{Binding BorderBrush, ElementName=border}"
                    Style="{StaticResource ButtonIcon}" />
                <liftui:WatermarkTextBox
                    x:Name="PART_TextBox"
                    Grid.Row="0"
                    Grid.Column="0"
                    Padding="{TemplateBinding Padding}"
                    HorizontalAlignment="Stretch"
                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                    CaretBrush="{TemplateBinding CaretBrush}"
                    Focusable="{TemplateBinding Focusable}"
                    Foreground="{TemplateBinding Foreground}"
                    Watermark="{Binding Path=(liftui:InfoElement.Placeholder), RelativeSource={RelativeSource TemplatedParent}}" />
                <Popup
                    x:Name="PART_Popup"
                    Grid.Column="0"
                    AllowsTransparency="True"
                    Placement="Bottom"
                    PlacementTarget="{Binding ElementName=border}"
                    PopupAnimation="{StaticResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                    StaysOpen="False" />
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="PART_Root" Property="Opacity" Value="0.4" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition SourceName="PART_Root" Property="IsMouseOver" Value="true" />
                    <Condition SourceName="PART_Popup" Property="IsOpen" Value="false" />
                </MultiTrigger.Conditions>
                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition SourceName="PART_Root" Property="IsMouseOver" Value="true" />
                    <Condition SourceName="PART_Popup" Property="IsOpen" Value="true" />
                </MultiTrigger.Conditions>
                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
            </MultiTrigger>
            <Trigger SourceName="PART_TextBox" Property="IsFocused" Value="true">
                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
            </Trigger>
            <Trigger SourceName="PART_Popup" Property="IsOpen" Value="True">
                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="DateTimePickerExtendLeftTemplatePersian" TargetType="liftui:PersianDateTimePicker">
        <Grid
            Height="{Binding Path=(liftui:InfoElement.ContentHeight), RelativeSource={RelativeSource TemplatedParent}}"
            MinHeight="{Binding Path=(liftui:InfoElement.MinContentHeight), RelativeSource={RelativeSource TemplatedParent}}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition
                    Width="{Binding Path=(liftui:InfoElement.TitleWidth), RelativeSource={RelativeSource TemplatedParent}}" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <DockPanel
                Margin="{Binding Path=(liftui:TitleElement.MarginOnTheLeft), RelativeSource={RelativeSource TemplatedParent}}"
                HorizontalAlignment="{Binding Path=(liftui:TitleElement.HorizontalAlignment), RelativeSource={RelativeSource TemplatedParent}}"
                VerticalAlignment="{Binding Path=(liftui:TitleElement.VerticalAlignment), RelativeSource={RelativeSource TemplatedParent}}"
                LastChildFill="True"
                Visibility="{Binding Path=(liftui:InfoElement.Title), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource String2VisibilityConverter}}">
                <ContentPresenter
                    Margin="4,0,0,0"
                    Content="{Binding Path=(liftui:InfoElement.Symbol), RelativeSource={RelativeSource TemplatedParent}}"
                    DockPanel.Dock="Right"
                    TextElement.Foreground="{DynamicResource DangerBrush}"
                    Visibility="{Binding Path=(liftui:InfoElement.Necessary), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource Boolean2VisibilityConverter}}" />
                <TextBlock
                    liftui:TextBlockAttach.AutoTooltip="True"
                    Text="{Binding Path=(liftui:InfoElement.Title), RelativeSource={RelativeSource TemplatedParent}}"
                    TextTrimming="CharacterEllipsis"
                    TextWrapping="NoWrap" />
            </DockPanel>
            <Grid x:Name="PART_Root" Grid.Column="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Border
                    x:Name="border"
                    Grid.ColumnSpan="2"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{DynamicResource BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="{Binding Path=(liftui:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" />
                <Button
                    x:Name="PART_Button"
                    Grid.Row="0"
                    Grid.Column="1"
                    Width="Auto"
                    Height="Auto"
                    Padding="{Binding Padding, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ThicknessSplitConverter}, ConverterParameter='0,0,1,0'}"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    liftui:IconElement.Geometry="{StaticResource ClockGeometry}"
                    liftui:IconElement.Width="14"
                    Focusable="False"
                    Foreground="{Binding BorderBrush, ElementName=border}"
                    Style="{StaticResource ButtonIcon}" />
                <liftui:WatermarkTextBox
                    x:Name="PART_TextBox"
                    Grid.Row="0"
                    Grid.Column="0"
                    Padding="{TemplateBinding Padding}"
                    HorizontalAlignment="Stretch"
                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                    CaretBrush="{TemplateBinding CaretBrush}"
                    Focusable="{TemplateBinding Focusable}"
                    Foreground="{TemplateBinding Foreground}"
                    Watermark="{Binding Path=(liftui:InfoElement.Placeholder), RelativeSource={RelativeSource TemplatedParent}}" />
                <Popup
                    x:Name="PART_Popup"
                    Grid.Column="0"
                    AllowsTransparency="True"
                    Placement="Bottom"
                    PlacementTarget="{Binding ElementName=border}"
                    PopupAnimation="{StaticResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                    StaysOpen="False" />
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="PART_Root" Property="Opacity" Value="0.4" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition SourceName="PART_Root" Property="IsMouseOver" Value="true" />
                    <Condition SourceName="PART_Popup" Property="IsOpen" Value="false" />
                </MultiTrigger.Conditions>
                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition SourceName="PART_Root" Property="IsMouseOver" Value="true" />
                    <Condition SourceName="PART_Popup" Property="IsOpen" Value="true" />
                </MultiTrigger.Conditions>
                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
            </MultiTrigger>
            <Trigger SourceName="PART_TextBox" Property="IsFocused" Value="true">
                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
            </Trigger>
            <Trigger SourceName="PART_Popup" Property="IsOpen" Value="True">
                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style
        x:Key="DateTimePickerExtendBaseStylePersian"
        BasedOn="{StaticResource DateTimePickerBaseStylePersian}"
        TargetType="liftui:PersianDateTimePicker">
        <Setter Property="Height" Value="Auto" />
        <Setter Property="liftui:InfoElement.Symbol" Value="●" />
        <Setter Property="liftui:InfoElement.ContentHeight" Value="{x:Static system:Double.NaN}" />
        <Setter Property="liftui:InfoElement.MinContentHeight" Value="{StaticResource DefaultControlHeight}" />
        <Setter Property="Template" Value="{StaticResource DateTimePickerExtendTopTemplatePersian}" />
        <Style.Triggers>
            <Trigger Property="liftui:InfoElement.TitlePlacement" Value="Left">
                <Setter Property="Template" Value="{StaticResource DateTimePickerExtendLeftTemplatePersian}" />
                <Setter Property="Width" Value="Auto" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="DateTimePickerPlusTopTemplatePersian" TargetType="liftui:PersianDateTimePicker">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition
                    Height="{Binding Path=(liftui:InfoElement.ContentHeight), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource Double2GridLengthConverter}}"
                    MinHeight="{Binding Path=(liftui:InfoElement.MinContentHeight), RelativeSource={RelativeSource TemplatedParent}}" />
            </Grid.RowDefinitions>
            <DockPanel
                Margin="{Binding Path=(liftui:TitleElement.MarginOnTheTop), RelativeSource={RelativeSource TemplatedParent}}"
                HorizontalAlignment="{Binding Path=(liftui:TitleElement.HorizontalAlignment), RelativeSource={RelativeSource TemplatedParent}}"
                LastChildFill="True"
                Visibility="{Binding Path=(liftui:InfoElement.Title), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource String2VisibilityConverter}}">
                <ContentPresenter
                    Margin="4,0,0,0"
                    Content="{Binding Path=(liftui:InfoElement.Symbol), RelativeSource={RelativeSource TemplatedParent}}"
                    DockPanel.Dock="Right"
                    TextElement.Foreground="{DynamicResource DangerBrush}"
                    Visibility="{Binding Path=(liftui:InfoElement.Necessary), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource Boolean2VisibilityConverter}}" />
                <TextBlock
                    liftui:TextBlockAttach.AutoTooltip="True"
                    Text="{Binding Path=(liftui:InfoElement.Title), RelativeSource={RelativeSource TemplatedParent}}"
                    TextTrimming="CharacterEllipsis"
                    TextWrapping="NoWrap" />
            </DockPanel>
            <Grid x:Name="PART_Root" Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Border
                    x:Name="border"
                    Grid.ColumnSpan="3"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{DynamicResource BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="{Binding Path=(liftui:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" />
                <Button
                    Name="ButtonClear"
                    Grid.Column="1"
                    Width="Auto"
                    Height="Auto"
                    Padding="0,0,2,0"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    HorizontalContentAlignment="Left"
                    liftui:IconElement.Geometry="{StaticResource DeleteFillCircleGeometry}"
                    liftui:IconElement.Width="14"
                    Command="interactivity:ControlCommands.Clear"
                    Foreground="{Binding BorderBrush, ElementName=border}"
                    Style="{StaticResource ButtonIcon}"
                    Visibility="Collapsed" />
                <Button
                    x:Name="PART_Button"
                    Grid.Row="0"
                    Grid.Column="2"
                    Width="Auto"
                    Height="Auto"
                    Padding="{Binding Padding, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ThicknessSplitConverter}, ConverterParameter='0,0,1,0'}"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    HorizontalContentAlignment="Left"
                    liftui:IconElement.Geometry="{StaticResource ClockGeometry}"
                    liftui:IconElement.Width="14"
                    Focusable="False"
                    Foreground="{Binding BorderBrush, ElementName=border}"
                    Style="{StaticResource ButtonIcon}" />
                <liftui:WatermarkTextBox
                    x:Name="PART_TextBox"
                    Grid.Row="0"
                    Grid.Column="0"
                    Padding="{TemplateBinding Padding}"
                    HorizontalAlignment="Stretch"
                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                    CaretBrush="{TemplateBinding CaretBrush}"
                    Focusable="{TemplateBinding Focusable}"
                    Foreground="{TemplateBinding Foreground}"
                    Watermark="{Binding Path=(liftui:InfoElement.Placeholder), RelativeSource={RelativeSource TemplatedParent}}" />
                <Popup
                    x:Name="PART_Popup"
                    Grid.Column="0"
                    AllowsTransparency="True"
                    Placement="Bottom"
                    PlacementTarget="{Binding ElementName=border}"
                    PopupAnimation="{StaticResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                    StaysOpen="False" />
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="PART_Root" Property="Opacity" Value="0.4" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition SourceName="PART_Root" Property="IsMouseOver" Value="true" />
                    <Condition SourceName="PART_Popup" Property="IsOpen" Value="false" />
                </MultiTrigger.Conditions>
                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition SourceName="PART_Root" Property="IsMouseOver" Value="true" />
                    <Condition SourceName="PART_Popup" Property="IsOpen" Value="true" />
                </MultiTrigger.Conditions>
                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition SourceName="PART_Root" Property="IsMouseOver" Value="true" />
                    <Condition Property="liftui:InfoElement.ShowClearButton" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="ButtonClear" Property="Visibility" Value="Visible" />
            </MultiTrigger>
            <Trigger SourceName="PART_TextBox" Property="IsFocused" Value="true">
                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
            </Trigger>
            <Trigger SourceName="PART_Popup" Property="IsOpen" Value="True">
                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="DateTimePickerPlusLeftTemplatePersian" TargetType="liftui:PersianDateTimePicker">
        <Grid
            Height="{Binding Path=(liftui:InfoElement.ContentHeight), RelativeSource={RelativeSource TemplatedParent}}"
            MinHeight="{Binding Path=(liftui:InfoElement.MinContentHeight), RelativeSource={RelativeSource TemplatedParent}}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition
                    Width="{Binding Path=(liftui:InfoElement.TitleWidth), RelativeSource={RelativeSource TemplatedParent}}" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <DockPanel
                Margin="{Binding Path=(liftui:TitleElement.MarginOnTheLeft), RelativeSource={RelativeSource TemplatedParent}}"
                HorizontalAlignment="{Binding Path=(liftui:TitleElement.HorizontalAlignment), RelativeSource={RelativeSource TemplatedParent}}"
                VerticalAlignment="{Binding Path=(liftui:TitleElement.VerticalAlignment), RelativeSource={RelativeSource TemplatedParent}}"
                LastChildFill="True"
                Visibility="{Binding Path=(liftui:InfoElement.Title), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource String2VisibilityConverter}}">
                <ContentPresenter
                    Margin="4,0,0,0"
                    Content="{Binding Path=(liftui:InfoElement.Symbol), RelativeSource={RelativeSource TemplatedParent}}"
                    DockPanel.Dock="Right"
                    TextElement.Foreground="{DynamicResource DangerBrush}"
                    Visibility="{Binding Path=(liftui:InfoElement.Necessary), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource Boolean2VisibilityConverter}}" />
                <TextBlock
                    liftui:TextBlockAttach.AutoTooltip="True"
                    Text="{Binding Path=(liftui:InfoElement.Title), RelativeSource={RelativeSource TemplatedParent}}"
                    TextTrimming="CharacterEllipsis"
                    TextWrapping="NoWrap" />
            </DockPanel>
            <Grid x:Name="PART_Root" Grid.Column="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Border
                    x:Name="border"
                    Grid.ColumnSpan="3"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{DynamicResource BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="{Binding Path=(liftui:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" />
                <Button
                    Name="ButtonClear"
                    Grid.Column="1"
                    Width="Auto"
                    Height="Auto"
                    Padding="0,0,2,0"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    HorizontalContentAlignment="Left"
                    liftui:IconElement.Geometry="{StaticResource DeleteFillCircleGeometry}"
                    liftui:IconElement.Width="14"
                    Command="interactivity:ControlCommands.Clear"
                    Foreground="{Binding BorderBrush, ElementName=border}"
                    Style="{StaticResource ButtonIcon}"
                    Visibility="Collapsed" />
                <Button
                    x:Name="PART_Button"
                    Grid.Row="0"
                    Grid.Column="2"
                    Width="Auto"
                    Height="Auto"
                    Padding="{Binding Padding, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ThicknessSplitConverter}, ConverterParameter='0,0,1,0'}"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    HorizontalContentAlignment="Left"
                    liftui:IconElement.Geometry="{StaticResource ClockGeometry}"
                    liftui:IconElement.Width="14"
                    Focusable="False"
                    Foreground="{Binding BorderBrush, ElementName=border}"
                    Style="{StaticResource ButtonIcon}" />
                <liftui:WatermarkTextBox
                    x:Name="PART_TextBox"
                    Grid.Row="0"
                    Grid.Column="0"
                    Padding="{TemplateBinding Padding}"
                    HorizontalAlignment="Stretch"
                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                    CaretBrush="{TemplateBinding CaretBrush}"
                    Focusable="{TemplateBinding Focusable}"
                    Foreground="{TemplateBinding Foreground}"
                    Watermark="{Binding Path=(liftui:InfoElement.Placeholder), RelativeSource={RelativeSource TemplatedParent}}" />
                <Popup
                    x:Name="PART_Popup"
                    Grid.Column="0"
                    AllowsTransparency="True"
                    Placement="Bottom"
                    PlacementTarget="{Binding ElementName=border}"
                    PopupAnimation="{StaticResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                    StaysOpen="False" />
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="PART_Root" Property="Opacity" Value="0.4" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition SourceName="PART_Root" Property="IsMouseOver" Value="true" />
                    <Condition SourceName="PART_Popup" Property="IsOpen" Value="false" />
                </MultiTrigger.Conditions>
                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition SourceName="PART_Root" Property="IsMouseOver" Value="true" />
                    <Condition SourceName="PART_Popup" Property="IsOpen" Value="true" />
                </MultiTrigger.Conditions>
                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition SourceName="PART_Root" Property="IsMouseOver" Value="true" />
                    <Condition Property="liftui:InfoElement.ShowClearButton" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="ButtonClear" Property="Visibility" Value="Visible" />
            </MultiTrigger>
            <Trigger SourceName="PART_TextBox" Property="IsFocused" Value="true">
                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
            </Trigger>
            <Trigger SourceName="PART_Popup" Property="IsOpen" Value="True">
                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style
        x:Key="DateTimePickerPlusBaseStylePersian"
        BasedOn="{StaticResource DateTimePickerExtendBaseStylePersian}"
        TargetType="liftui:PersianDateTimePicker">
        <Setter Property="Template" Value="{StaticResource DateTimePickerPlusTopTemplatePersian}" />
        <Style.Triggers>
            <Trigger Property="liftui:InfoElement.TitlePlacement" Value="Left">
                <Setter Property="Template" Value="{StaticResource DateTimePickerPlusLeftTemplatePersian}" />
                <Setter Property="Width" Value="Auto" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>
