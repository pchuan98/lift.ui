<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:interactivity="clr-namespace:Lift.UI.Interactivity"
                    xmlns:converter="clr-namespace:Lift.UI.Tools.Converter"
                    xmlns:o="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
                    xmlns:system="clr-namespace:System;assembly=mscorlib"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:langs="clr-namespace:Lift.UI.Properties.Langs" xmlns:liftui="clr-namespace:Lift.UI.Controls"
                    xmlns:tools="clr-namespace:Lift.UI.Tools" xmlns:ex="clr-namespace:Lift.UI.Tools.Extension"
                    xmlns:conv="clr-namespace:Lift.UI.Tools.Converter"
                    xmlns:lang="clr-namespace:Lift.UI.Properties.Langs" xmlns:local="clr-namespace:Lift.UI.Controls"
                    xmlns:primitives="clr-namespace:Microsoft.Windows.Controls.Primitives"
                    xmlns:shapes="clr-namespace:Lift.UI.Expression.Shapes">

    <Style x:Key="PasswordBoxBaseStyle" BasedOn="{StaticResource InputElementBaseStyle}" TargetType="PasswordBox">
        <Setter Property="PasswordChar" Value="●" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="PasswordBox">
                    <liftui:SimplePanel x:Name="root">
                        <Border x:Name="border"
                                CornerRadius="{Binding Path=(liftui:BorderElement.CornerRadius),RelativeSource={RelativeSource TemplatedParent}}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}" SnapsToDevicePixels="True" />
                        <ScrollViewer Margin="-2,0" Padding="{TemplateBinding Padding}"
                                      VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                      x:Name="PART_ContentHost" Focusable="false"
                                      HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" />
                    </liftui:SimplePanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.4" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border"
                                    Value="{DynamicResource SecondaryBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource PrimaryBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="PasswordBoxExtendTopTemplate" TargetType="PasswordBox">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition
                    MinHeight="{Binding Path=(liftui:InfoElement.MinContentHeight),RelativeSource={RelativeSource TemplatedParent}}"
                    Height="{Binding Path=(liftui:InfoElement.ContentHeight),RelativeSource={RelativeSource TemplatedParent},Converter={StaticResource Double2GridLengthConverter}}" />
            </Grid.RowDefinitions>
            <DockPanel LastChildFill="True"
                       Visibility="{Binding Path=(liftui:InfoElement.Title),RelativeSource={RelativeSource TemplatedParent},Converter={StaticResource String2VisibilityConverter}}"
                       HorizontalAlignment="{Binding Path=(liftui:TitleElement.HorizontalAlignment),RelativeSource={RelativeSource TemplatedParent}}"
                       Margin="{Binding Path=(liftui:TitleElement.MarginOnTheTop),RelativeSource={RelativeSource TemplatedParent}}">
                <ContentPresenter DockPanel.Dock="Right" TextElement.Foreground="{DynamicResource DangerBrush}"
                                  Margin="4,0,0,0"
                                  Content="{Binding Path=(liftui:InfoElement.Symbol),RelativeSource={RelativeSource TemplatedParent}}"
                                  Visibility="{Binding Path=(liftui:InfoElement.Necessary),RelativeSource={RelativeSource TemplatedParent},Converter={StaticResource Boolean2VisibilityConverter}}" />
                <TextBlock liftui:TextBlockAttach.AutoTooltip="True" TextWrapping="NoWrap"
                           TextTrimming="CharacterEllipsis"
                           Text="{Binding Path=(liftui:InfoElement.Title),RelativeSource={RelativeSource TemplatedParent}}" />
            </DockPanel>
            <Border x:Name="border" Grid.Row="1"
                    CornerRadius="{Binding Path=(liftui:BorderElement.CornerRadius),RelativeSource={RelativeSource TemplatedParent}}"
                    BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                    Background="{TemplateBinding Background}" SnapsToDevicePixels="True" />
            <TextBlock x:Name="placeholder" Visibility="Collapsed"
                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                       Margin="{TemplateBinding Padding}" Grid.Row="1" HorizontalAlignment="Stretch"
                       Style="{StaticResource TextBlockDefaultThiLight}"
                       Text="{Binding Path=(liftui:InfoElement.Placeholder),RelativeSource={RelativeSource TemplatedParent}}" />
            <ScrollViewer Margin="-2,0" Padding="{TemplateBinding Padding}"
                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Grid.Row="1"
                          x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden"
                          VerticalScrollBarVisibility="Hidden" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="liftui:PasswordBoxAttach.PasswordLength" Value="0">
                <Setter Property="Visibility" TargetName="placeholder" Value="Visible" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" Value="0.4" TargetName="border" />
                <Setter Property="Opacity" Value="0.4" TargetName="placeholder" />
                <Setter Property="Opacity" Value="0.4" TargetName="PART_ContentHost" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true" SourceName="PART_ContentHost">
                <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
            </Trigger>
            <Trigger Property="IsFocused" Value="true">
                <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="PasswordBoxExtendLeftTemplate" TargetType="PasswordBox">
        <Grid
            MinHeight="{Binding Path=(liftui:InfoElement.MinContentHeight),RelativeSource={RelativeSource TemplatedParent}}"
            Height="{Binding Path=(liftui:InfoElement.ContentHeight),RelativeSource={RelativeSource TemplatedParent}}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition
                    Width="{Binding Path=(liftui:InfoElement.TitleWidth),RelativeSource={RelativeSource TemplatedParent}}" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <DockPanel LastChildFill="True"
                       Visibility="{Binding Path=(liftui:InfoElement.Title),RelativeSource={RelativeSource TemplatedParent},Converter={StaticResource String2VisibilityConverter}}"
                       HorizontalAlignment="{Binding Path=(liftui:TitleElement.HorizontalAlignment),RelativeSource={RelativeSource TemplatedParent}}"
                       VerticalAlignment="{Binding Path=(liftui:TitleElement.VerticalAlignment),RelativeSource={RelativeSource TemplatedParent}}"
                       Margin="{Binding Path=(liftui:TitleElement.MarginOnTheLeft),RelativeSource={RelativeSource TemplatedParent}}">
                <ContentPresenter DockPanel.Dock="Right" TextElement.Foreground="{DynamicResource DangerBrush}"
                                  Margin="4,0,0,0"
                                  Content="{Binding Path=(liftui:InfoElement.Symbol),RelativeSource={RelativeSource TemplatedParent}}"
                                  Visibility="{Binding Path=(liftui:InfoElement.Necessary),RelativeSource={RelativeSource TemplatedParent},Converter={StaticResource Boolean2VisibilityConverter}}" />
                <TextBlock liftui:TextBlockAttach.AutoTooltip="True" TextWrapping="NoWrap"
                           TextTrimming="CharacterEllipsis"
                           Text="{Binding Path=(liftui:InfoElement.Title),RelativeSource={RelativeSource TemplatedParent}}" />
            </DockPanel>
            <Border x:Name="border" Grid.Column="1"
                    CornerRadius="{Binding Path=(liftui:BorderElement.CornerRadius),RelativeSource={RelativeSource TemplatedParent}}"
                    BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                    Background="{TemplateBinding Background}" SnapsToDevicePixels="True" />
            <TextBlock VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                       Margin="{TemplateBinding Padding}" x:Name="placeholder" Visibility="Collapsed" Grid.Column="1"
                       HorizontalAlignment="Stretch" Style="{StaticResource TextBlockDefaultThiLight}"
                       Text="{Binding Path=(liftui:InfoElement.Placeholder),RelativeSource={RelativeSource TemplatedParent}}" />
            <ScrollViewer Margin="-2,0" Padding="{TemplateBinding Padding}" Grid.Column="1" x:Name="PART_ContentHost"
                          Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="liftui:PasswordBoxAttach.PasswordLength" Value="0">
                <Setter Property="Visibility" TargetName="placeholder" Value="Visible" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" Value="0.4" TargetName="border" />
                <Setter Property="Opacity" Value="0.4" TargetName="placeholder" />
                <Setter Property="Opacity" Value="0.4" TargetName="PART_ContentHost" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true" SourceName="PART_ContentHost">
                <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
            </Trigger>
            <Trigger Property="IsFocused" Value="true">
                <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="PasswordBoxExtendBaseStyle" BasedOn="{StaticResource PasswordBoxBaseStyle}" TargetType="PasswordBox">
        <Setter Property="Height" Value="Auto" />
        <Setter Property="liftui:InfoElement.Symbol" Value="●" />
        <Setter Property="liftui:InfoElement.ContentHeight" Value="{x:Static system:Double.NaN}" />
        <Setter Property="liftui:InfoElement.MinContentHeight" Value="{StaticResource DefaultControlHeight}" />
        <Setter Property="liftui:PasswordBoxAttach.IsMonitoring" Value="True" />
        <Setter Property="Template" Value="{StaticResource PasswordBoxExtendTopTemplate}" />
        <Style.Triggers>
            <Trigger Property="liftui:InfoElement.TitlePlacement" Value="Left">
                <Setter Property="Template" Value="{StaticResource PasswordBoxExtendLeftTemplate}" />
                <Setter Property="Width" Value="Auto" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="PasswordBoxPlusInternalStyle" TargetType="PasswordBox">
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="{StaticResource DefaultInputPadding}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="PasswordBox">
                    <liftui:SimplePanel>
                        <TextBlock VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                   Padding="{TemplateBinding Padding}" x:Name="placeholder" Visibility="Collapsed"
                                   HorizontalAlignment="Stretch" Style="{StaticResource TextBlockDefaultThiLight}"
                                   Text="{Binding Path=(liftui:InfoElement.Placeholder),RelativeSource={RelativeSource TemplatedParent}}" />
                        <ScrollViewer Margin="-2,0" Padding="{TemplateBinding Padding}" x:Name="PART_ContentHost"
                                      Focusable="false" HorizontalScrollBarVisibility="Hidden"
                                      VerticalScrollBarVisibility="Hidden" />
                    </liftui:SimplePanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="liftui:PasswordBoxAttach.PasswordLength" Value="0">
                            <Setter Property="Visibility" TargetName="placeholder" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="PasswordBoxPlusTopTemplate" TargetType="liftui:PasswordBox">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition
                    MinHeight="{Binding Path=(liftui:InfoElement.MinContentHeight),RelativeSource={RelativeSource TemplatedParent}}"
                    Height="{Binding Path=(liftui:InfoElement.ContentHeight),RelativeSource={RelativeSource TemplatedParent},Converter={StaticResource Double2GridLengthConverter}}" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <DockPanel Grid.ColumnSpan="3" LastChildFill="True"
                       Visibility="{Binding Path=(liftui:InfoElement.Title),RelativeSource={RelativeSource TemplatedParent},Converter={StaticResource String2VisibilityConverter}}"
                       HorizontalAlignment="{Binding Path=(liftui:TitleElement.HorizontalAlignment),RelativeSource={RelativeSource TemplatedParent}}"
                       Margin="{Binding Path=(liftui:TitleElement.MarginOnTheTop),RelativeSource={RelativeSource TemplatedParent}}">
                <ContentPresenter DockPanel.Dock="Right" TextElement.Foreground="{DynamicResource DangerBrush}"
                                  Margin="4,0,0,0"
                                  Content="{Binding Path=(liftui:InfoElement.Symbol),RelativeSource={RelativeSource TemplatedParent}}"
                                  Visibility="{Binding Path=(liftui:InfoElement.Necessary),RelativeSource={RelativeSource TemplatedParent},Converter={StaticResource Boolean2VisibilityConverter}}" />
                <TextBlock liftui:TextBlockAttach.AutoTooltip="True" TextWrapping="NoWrap"
                           TextTrimming="CharacterEllipsis"
                           Text="{Binding Path=(liftui:InfoElement.Title),RelativeSource={RelativeSource TemplatedParent}}" />
            </DockPanel>
            <Border Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3"
                    CornerRadius="{Binding Path=(liftui:BorderElement.CornerRadius),RelativeSource={RelativeSource TemplatedParent}}"
                    BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                    Background="{TemplateBinding Background}" SnapsToDevicePixels="True" />
            <PasswordBox
                Visibility="{Binding ShowPassword,RelativeSource={RelativeSource TemplatedParent},Converter={StaticResource Boolean2VisibilityReConverter}}"
                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}"
                Foreground="{TemplateBinding Foreground}" Grid.Column="0" Grid.Row="1" x:Name="PART_PasswordBox"
                PasswordChar="{TemplateBinding PasswordChar}" Style="{StaticResource PasswordBoxPlusInternalStyle}" />
            <liftui:WatermarkTextBox
                Visibility="{Binding ShowPassword,RelativeSource={RelativeSource TemplatedParent},Converter={StaticResource Boolean2VisibilityConverter}}"
                x:Name="PART_TextBox" Padding="{TemplateBinding Padding}"
                Watermark="{Binding Path=(liftui:InfoElement.Placeholder),RelativeSource={RelativeSource TemplatedParent}}"
                HorizontalAlignment="Stretch" Grid.Column="0"
                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Grid.Row="1"
                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
            <Button Height="Auto" Width="Auto" HorizontalContentAlignment="Left" VerticalAlignment="Stretch"
                    HorizontalAlignment="Stretch" liftui:IconElement.Width="14" Grid.Row="1" Grid.Column="1"
                    Command="interactivity:ControlCommands.Clear" Visibility="Collapsed" Name="ButtonClear"
                    Style="{StaticResource ButtonIcon}"
                    Padding="{Binding Padding, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ThicknessSplitConverter}, ConverterParameter='0,0,1,0'}"
                    liftui:IconElement.Geometry="{StaticResource DeleteFillCircleGeometry}"
                    Foreground="{TemplateBinding BorderBrush}" />
            <ToggleButton Height="Auto" Width="Auto" HorizontalContentAlignment="Left" VerticalAlignment="Stretch"
                          HorizontalAlignment="Stretch" liftui:IconElement.Width="14"
                          IsChecked="{Binding ShowPassword,RelativeSource={RelativeSource TemplatedParent},Mode=TwoWay}"
                          Style="{StaticResource ToggleButtonIconTransparent}"
                          Visibility="{TemplateBinding ShowEyeButton,Converter={StaticResource Boolean2VisibilityConverter}}"
                          Padding="{Binding Padding, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ThicknessSplitConverter}, ConverterParameter='0,0,1,0'}"
                          liftui:IconSwitchElement.Geometry="{StaticResource EyeCloseGeometry}"
                          liftui:IconSwitchElement.GeometrySelected="{StaticResource EyeOpenGeometry}"
                          x:Name="ButtonEye" Grid.Column="2" Foreground="{TemplateBinding BorderBrush}"
                          Focusable="False" Grid.Row="1" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
            </Trigger>
            <Trigger Property="IsFocused" Value="true" SourceName="PART_PasswordBox">
                <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
            </Trigger>
            <Trigger Property="IsFocused" Value="true" SourceName="PART_TextBox">
                <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="true" />
                    <Condition Property="liftui:InfoElement.ShowClearButton" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Visibility" Value="Visible" TargetName="ButtonClear" />
            </MultiTrigger>
            <Trigger Property="ShowEyeButton" Value="true">
                <Setter Property="Padding" Value="0,0,2,0" TargetName="ButtonClear" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="PasswordBoxPlusLeftTemplate" TargetType="liftui:PasswordBox">
        <Grid
            MinHeight="{Binding Path=(liftui:InfoElement.MinContentHeight),RelativeSource={RelativeSource TemplatedParent}}"
            Height="{Binding Path=(liftui:InfoElement.ContentHeight),RelativeSource={RelativeSource TemplatedParent}}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition
                    Width="{Binding Path=(liftui:InfoElement.TitleWidth),RelativeSource={RelativeSource TemplatedParent}}" />
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <DockPanel LastChildFill="True"
                       Visibility="{Binding Path=(liftui:InfoElement.Title),RelativeSource={RelativeSource TemplatedParent},Converter={StaticResource String2VisibilityConverter}}"
                       HorizontalAlignment="{Binding Path=(liftui:TitleElement.HorizontalAlignment),RelativeSource={RelativeSource TemplatedParent}}"
                       VerticalAlignment="{Binding Path=(liftui:TitleElement.VerticalAlignment),RelativeSource={RelativeSource TemplatedParent}}"
                       Margin="{Binding Path=(liftui:TitleElement.MarginOnTheLeft),RelativeSource={RelativeSource TemplatedParent}}">
                <ContentPresenter DockPanel.Dock="Right" TextElement.Foreground="{DynamicResource DangerBrush}"
                                  Margin="4,0,0,0"
                                  Content="{Binding Path=(liftui:InfoElement.Symbol),RelativeSource={RelativeSource TemplatedParent}}"
                                  Visibility="{Binding Path=(liftui:InfoElement.Necessary),RelativeSource={RelativeSource TemplatedParent},Converter={StaticResource Boolean2VisibilityConverter}}" />
                <TextBlock liftui:TextBlockAttach.AutoTooltip="True" TextWrapping="NoWrap"
                           TextTrimming="CharacterEllipsis"
                           Text="{Binding Path=(liftui:InfoElement.Title),RelativeSource={RelativeSource TemplatedParent}}" />
            </DockPanel>
            <Border Grid.Column="1" Grid.ColumnSpan="3"
                    CornerRadius="{Binding Path=(liftui:BorderElement.CornerRadius),RelativeSource={RelativeSource TemplatedParent}}"
                    BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                    Background="{TemplateBinding Background}" SnapsToDevicePixels="True" />
            <PasswordBox
                Visibility="{Binding ShowPassword,RelativeSource={RelativeSource TemplatedParent},Converter={StaticResource Boolean2VisibilityReConverter}}"
                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}"
                Foreground="{TemplateBinding Foreground}" Grid.Column="1" x:Name="PART_PasswordBox"
                PasswordChar="{TemplateBinding PasswordChar}" Style="{StaticResource PasswordBoxPlusInternalStyle}" />
            <liftui:WatermarkTextBox
                Visibility="{Binding ShowPassword,RelativeSource={RelativeSource TemplatedParent},Converter={StaticResource Boolean2VisibilityConverter}}"
                x:Name="PART_TextBox" Padding="{TemplateBinding Padding}"
                Watermark="{Binding Path=(liftui:InfoElement.Placeholder),RelativeSource={RelativeSource TemplatedParent}}"
                HorizontalAlignment="Stretch" Grid.Column="1"
                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
            <Button Height="Auto" Width="Auto" HorizontalContentAlignment="Left" VerticalAlignment="Stretch"
                    HorizontalAlignment="Stretch" liftui:IconElement.Width="14" Grid.Column="2"
                    Command="interactivity:ControlCommands.Clear" Visibility="Collapsed" Name="ButtonClear"
                    Style="{StaticResource ButtonIcon}"
                    Padding="{Binding Padding, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ThicknessSplitConverter}, ConverterParameter='0,0,1,0'}"
                    liftui:IconElement.Geometry="{StaticResource DeleteFillCircleGeometry}"
                    Foreground="{TemplateBinding BorderBrush}" />
            <ToggleButton Height="Auto" Width="Auto" HorizontalContentAlignment="Left" VerticalAlignment="Stretch"
                          HorizontalAlignment="Stretch" liftui:IconElement.Width="14"
                          IsChecked="{Binding ShowPassword,RelativeSource={RelativeSource TemplatedParent},Mode=TwoWay}"
                          Style="{StaticResource ToggleButtonIconTransparent}"
                          Visibility="{TemplateBinding ShowEyeButton,Converter={StaticResource Boolean2VisibilityConverter}}"
                          Padding="{Binding Padding, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ThicknessSplitConverter}, ConverterParameter='0,0,1,0'}"
                          liftui:IconSwitchElement.Geometry="{StaticResource EyeCloseGeometry}"
                          liftui:IconSwitchElement.GeometrySelected="{StaticResource EyeOpenGeometry}"
                          x:Name="ButtonEye" Grid.Column="3" Foreground="{TemplateBinding BorderBrush}"
                          Focusable="False" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBorderBrush}" />
            </Trigger>
            <Trigger Property="IsFocused" Value="true" SourceName="PART_PasswordBox">
                <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
            </Trigger>
            <Trigger Property="IsFocused" Value="true" SourceName="PART_TextBox">
                <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="true" />
                    <Condition Property="liftui:InfoElement.ShowClearButton" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Visibility" Value="Visible" TargetName="ButtonClear" />
            </MultiTrigger>
            <Trigger Property="ShowEyeButton" Value="true">
                <Setter Property="Padding" Value="0,0,2,0" TargetName="ButtonClear" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="PasswordBoxPlusBaseStyle" BasedOn="{StaticResource InputElementBaseStyle}"
           TargetType="liftui:PasswordBox">
        <Setter Property="PasswordChar" Value="●" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Padding" Value="{StaticResource DefaultInputPadding}" />
        <Setter Property="liftui:InfoElement.Symbol" Value="●" />
        <Setter Property="liftui:InfoElement.ContentHeight" Value="{x:Static system:Double.NaN}" />
        <Setter Property="liftui:PasswordBoxAttach.IsMonitoring" Value="True" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template" Value="{StaticResource PasswordBoxPlusTopTemplate}" />
        <Style.Triggers>
            <Trigger Property="liftui:InfoElement.TitlePlacement" Value="Left">
                <Setter Property="Template" Value="{StaticResource PasswordBoxPlusLeftTemplate}" />
                <Setter Property="Width" Value="Auto" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>
