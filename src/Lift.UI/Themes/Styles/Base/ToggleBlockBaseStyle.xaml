<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:interactivity="clr-namespace:Lift.UI.Interactivity"
                    xmlns:converter="clr-namespace:Lift.UI.Tools.Converter"
                    xmlns:o="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
                    xmlns:system="clr-namespace:System;assembly=mscorlib"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:langs="clr-namespace:Lift.UI.Properties.Langs" xmlns:liftui="clr-namespace:Lift.UI.Controls"
                    xmlns:tools="clr-namespace:Lift.UI.Tools" xmlns:ex="clr-namespace:Lift.UI.Tools.Extension"
                    xmlns:conv="clr-namespace:Lift.UI.Tools.Converter"
                    xmlns:lang="clr-namespace:Lift.UI.Properties.Langs" xmlns:local="clr-namespace:Lift.UI.Controls"
                    xmlns:primitives="clr-namespace:Microsoft.Windows.Controls.Primitives"
                    xmlns:shapes="clr-namespace:Lift.UI.Expression.Shapes">

    <Style x:Key="ToggleBlockBaseStyle" TargetType="liftui:ToggleBlock">
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="liftui:ToggleBlock">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <liftui:SimplePanel Margin="{TemplateBinding Padding}"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                            <ContentPresenter Name="ContentPresenterChecked" ContentSource="CheckedContent"
                                              Visibility="Collapsed" />
                            <ContentPresenter Name="ContentPresenterUnChecked" ContentSource="UnCheckedContent" />
                            <ContentPresenter Name="ContentPresenterIndeterminate" ContentSource="IndeterminateContent"
                                              Visibility="Collapsed" />
                        </liftui:SimplePanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="ContentPresenterChecked" Property="Visibility" Value="Visible" />
                            <Setter TargetName="ContentPresenterUnChecked" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="ContentPresenterIndeterminate" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="ContentPresenterChecked" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="ContentPresenterUnChecked" Property="Visibility" Value="Visible" />
                            <Setter TargetName="ContentPresenterIndeterminate" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="ContentPresenterChecked" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="ContentPresenterUnChecked" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="ContentPresenterIndeterminate" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
